---
# tasks file for root-command-log-RHEL9
  - name: Obtiene home de UUID mayores a 500
    shell: | 
      { cut -d: -f1,3,6,7 /etc/passwd | awk -F: '$2 >= 1000 && $4 !~ /(nologin|false)$/ {print $3}' | grep -v nobody; grep '^root:' /etc/passwd | cut -d: -f6; } | sort -u
    register: home_dirs
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Asegurarse de que el archivo .bashrc existe
    file:
      path: "{{ item }}/.bashrc"
      state: touch
    loop: "{{ home_dirs.stdout_lines }}"
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Agregar bloque de texto al .bashrc
    blockinfile:
      path: "{{ item }}/.bashrc"
      backup: yes
      create: yes
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: |
        #Configuracion para root-command-log - No modificar
        PROMPT_COMMAND='history -a >(tee -a ~/.bash_history | logger -p local6.notice -t "$HOSTNAME ; $USUARIO: ; IP_SOURCE=$IP ; CMD> $SSH_CONNECTION")'
    loop: "{{ home_dirs.stdout_lines }}"
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'
  
  - name: Asegurarse de que el archivo .bash_profile existe
    file:
      path: "{{ item }}/.bash_profile"
      state: touch
    loop: "{{ home_dirs.stdout_lines }}"
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Agregar bloque de texto al .bash_profile
    blockinfile:
      path: "{{ item }}/.bash_profile"
      backup: yes
      create: yes
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: |
        #Configuracion para root-command-log - No modificar
        terminal=`tty | cut -d"/" -f 3,4`
        HOSTNAME=`hostname`
        INFO_USER=$(w | grep $terminal | grep "priv" | wc -l)
        if test $INFO_USER -eq "1"
        then
        USUARIOp1=S`w | grep $terminal | awk '{print $1}'`
        USUARIO=SUDO_`w | grep $terminal | awk '{print $8}'`
        else
        USUARIO=`w | grep $terminal | awk '{print $1}'`
        fi

        # User specific environment and startup programs
        IP=$(w -f | grep $terminal | awk '{print $3}')
        PATH=$PATH:$HOME/bin
        TTY=$(/usr/bin/tty)
        export PATH TTY IP USUARIO HOSTNAME
        unset USERNAME
    loop: "{{ home_dirs.stdout_lines }}"
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Asegurarse de que el archivo /etc/skel/.bashrc existe
    file:
      path: "/etc/skel/.bashrc"
      state: touch
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Agregar bloque de texto al /etc/skel/.bashrc
    blockinfile:
      path: "/etc/skel/.bashrc"
      backup: yes
      create: yes
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: |
        #Configuracion para root-command-log - No modificar
        PROMPT_COMMAND='history -a >(tee -a ~/.bash_history | logger -p local6.notice -t "$HOSTNAME ; $USUARIO: ; IP_SOURCE=$IP ; CMD> $SSH_CONNECTION")'
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Asegurarse de que el archivo /etc/skel/.bash_profile existe
    file:
      path: "/etc/skel/.bash_profile"
      state: touch
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Agregar bloque de texto al /etc/skel/.bash_profile
    blockinfile:
      path: "/etc/skel/.bash_profile"
      backup: yes
      create: yes
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: |
        #Configuracion para root-command-log - No modificar
        terminal=`tty | cut -d"/" -f 3,4`
        HOSTNAME=`hostname`
        INFO_USER=$(w | grep $terminal | grep "priv" | wc -l)
        if test $INFO_USER -eq "1"
        then
        USUARIOp1=S`w | grep $terminal | awk '{print $1}'`
        USUARIO=SUDO_`w | grep $terminal | awk '{print $8}'`
        else
        USUARIO=`w | grep $terminal | awk '{print $1}'`
        fi

        # User specific environment and startup programs
        IP=$(w -f | grep $terminal | awk '{print $3}')
        PATH=$PATH:$HOME/bin
        TTY=$(/usr/bin/tty)
        export PATH TTY IP USUARIO HOSTNAME
        unset USERNAME
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'

  - name: Agrega configuracion a rsyslog.conf
    lineinfile:
      path: /etc/rsyslog.conf
      line: 'local6.notice                                           /var/log/rootcmd.log #configurar log local'
      create: yes
      backup: yes
      insertafter: EOF
      state: present
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'
  
  - name: Reinicia servicio rsyslog
    service:
      name: rsyslog
      state: restarted
    when: ansible_facts['distribution'] == 'RedHat' and ansible_facts['distribution_major_version'] == '9'