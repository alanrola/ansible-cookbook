---
- name: Ensure node_exporter user exists
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    system: true
    shell: /sbin/nologin
    create_home: false

- name: Create bin dir
  ansible.builtin.file:
    path: "{{ node_exporter_bin_dir }}"
    state: directory
    mode: "0755"

- name: Download node_exporter tarball
  ansible.builtin.get_url:
    url: "{{ node_exporter_download_url }}"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.{{ node_exporter_os }}-{{ node_exporter_arch }}.tar.gz"
    mode: "0644"
    checksum: "{{ node_exporter_checksum | default(omit) }}"

- name: Unarchive tarball
  ansible.builtin.unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.{{ node_exporter_os }}-{{ node_exporter_arch }}.tar.gz"
    dest: "/tmp"
    remote_src: true
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.{{ node_exporter_os }}-{{ node_exporter_arch }}/node_exporter"

- name: Install binary
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.{{ node_exporter_os }}-{{ node_exporter_arch }}/node_exporter"
    dest: "{{ node_exporter_bin }}"
    mode: "0755"
    owner: root
    group: root
    remote_src: true
  notify: Restart node_exporter

- name: Template systemd unit
  ansible.builtin.template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Daemon reload
    - Restart node_exporter

- name: Ensure service enabled and started
  ansible.builtin.systemd:
    name: node_exporter
    enabled: true
    state: started
